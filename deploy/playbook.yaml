---
- name: Setup Keepalived for failover and deploy Caddy using Docker
  hosts: all
  become: true
  vars:
    vip: "192.168.1.250"
    interface: "eth0"
    primary_node: "192.168.1.251"
    backup_node: "192.168.1.252"
    priority_master: 200
    priority_backup: 100

  tasks:
    - name: Update apt package index
      apt:
        update_cache: yes

    - name: Install required packages
      apt:
        name:
          - keepalived
          - git
          - curl
          - cron
        state: present

    - name: Configure Keepalived
      template:
        src: keepalived.conf.j2
        dest: /etc/keepalived/keepalived.conf
        mode: "0644"
      notify: restart keepalived

    - name: Clone the dc-reverse-proxy-config repository
      git:
        repo: https://github.com/ozeliurs/dc-reverse-proxy-config.git
        dest: /opt/dc-reverse-proxy-config
        update: yes

    - name: Install Docker
      shell: curl -fsSL https://get.docker.com | sh -
      args:
        creates: /usr/bin/docker

    - name: Copy .env file to the target server
      copy:
        src: ./.env
        dest: /opt/dc-reverse-proxy-config/caddy/.env
        mode: "0644"

    - name: Start Docker Compose
      shell: docker compose -f /opt/dc-reverse-proxy-config/caddy/docker-compose.yaml up -d

    - name: Create update script
      copy:
        dest: /usr/local/bin/update_caddy.sh
        content: |
          #!/bin/bash
          cd /opt/dc-reverse-proxy-config
          git remote update
          if ! git status -uno | grep -q 'Your branch is up to date'; then
            git pull
            cd caddy
            docker compose down
            docker compose up -d
          fi
        mode: "0755"

    - name: Add cron job to check for updates every minute
      cron:
        name: "Check for updates and restart Caddy if necessary"
        minute: "*"
        hour: "*"
        job: "/usr/local/bin/update_caddy.sh"

  handlers:
    - name: restart keepalived
      service:
        name: keepalived
        state: restarted
